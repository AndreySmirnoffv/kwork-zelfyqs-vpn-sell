import { prisma } from "../services/prisma.js";
import path from 'path'; 
import fs from 'fs';
import { fileURLToPath } from 'url';
import { dirname } from 'path';

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ __dirname –¥–ª—è ES-–º–æ–¥—É–ª–µ–π
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const subscriptionPhotoPath = path.resolve(__dirname, '../db/images/subscription.jpg');  // –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å

export async function earnMessage(bot, chatId) {
    try {
        const user = await prisma.users.findFirst({
            where: { chatId }
        });
    
        if (!user) {
            return await bot.sendMessage(chatId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if (fs.existsSync(subscriptionPhotoPath)) {
            return await bot.sendPhoto(
                chatId,
                subscriptionPhotoPath, // –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
                {
                    caption: `<b>üí∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ SHIELDSURF+</b>
        
        –î–µ–ª–∏—Ç–µ—Å—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ:
        
        üîó <b>${user.ref}</b>
        
        ü™ô <b>–£—Å–ª–æ–≤–∏—è:</b>
        
        50‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ —Å –ø–æ–¥–ø–∏—Å–∫–æ–π (–µ—Å–ª–∏ —É –≤–∞—Å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞).
        
        25‚ÇΩ, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç.
        
        üí≥ <b>–ö—É–¥–∞ —Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏:</b>
        
        –í—ã–≤–æ–¥–∏—Ç–µ –∏—Ö –Ω–∞ –∫–∞—Ä—Ç—É (–ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ).
        
        –û–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É SHIELDSURF.
        
        üìä <b>–í–∞—à –±–æ–Ω—É—Å–Ω—ã–π —Å—á–µ—Ç:</b>
        
        üí∏ <b>${user.balance}</b>
        
        üéØ <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>
        
        –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ—Å—Ç–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
        
        –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è (–±–∞–Ω–Ω–µ—Ä—ã, —Ç–µ–∫—Å—Ç—ã).`,
                    parse_mode: 'HTML',
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: "–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data: "main" }]
                        ]
                    }
                }
            );
        } else {
            return await bot.sendMessage(chatId, "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –ø—É—Ç–∏: " + subscriptionPhotoPath);
        }
    } catch (error) {
        console.error("Error in earnMessage:", error);
        throw Error(error);
    }
}
