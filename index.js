import { adminIncome, blockUser, refPayments } from "./assets/scripts/admin.js"
import { createUser, profile } from "./assets/scripts/users.js"
import { createPayment } from "./assets/scripts/payments.js"
import { bot } from "./bot.js"
import { checkSubscriptions } from "./assets/scripts/reminder.js";
import { refMessage } from "./assets/scripts/earn.js";
import { prisma } from "./assets/services/prisma.js";

setInterval(async () => {
    await checkSubscriptions(bot); 
}, 24 * 60 * 60 * 1000); 


bot.on("message", async msg => {
    const chatId = msg.chat.id


    if (msg.text.includes("/start")){
        console.log(msg.from.first_name)
        await createUser(bot, msg)
    }

    switch(msg.text){            
        case "üßë‚Äçüíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç":
            await profile(bot, chatId)
            break
        case "–ü–æ–¥–ø–∏—Å–∫–∞ üìÖ":
            await bot.sendPhoto(chatId, "./assets/db/images/IMG_5183.JPG", {caption: "–í—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É", reply_markup: JSON.stringify({
                inline_keyboard: [
                    [{text: "üóì –ú–µ—Å—è—Ü - 150 —Ä—É–±", callback_data: "one_month_sub"}],
                    [{text: "üóì 3 –º–µ—Å—è—Ü–∞ - 425 —Ä—É–±", callback_data: "three_months_sub"}],
                    [{text: "üóì 6 –º–µ—Å—è—Ü–µ–≤ - 800 —Ä—É–±", callback_data: "six_months_sub"}],
                    [{text: "üóì –ì–æ–¥ - 1550", callback_data: "one_year_sub"}]
                ]
            })})
            break
        case "–ü–æ–¥–∫–ª—é—á–∏—Ç—å VPN üåê":
            break
        case "üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å":
            break
        case "–ë–æ–Ω—É—Å üéÅ":
            await refMessage(bot, chatId)
            break
        case "–£–∑–Ω–∞—Ç—å –æ VPN ‚ÑπÔ∏è":
            await bot.sendPhoto(chatId, "./assets/db/images/IMG_5181.JPG", {caption: ` üõ° VPN SHIELDSURF  

 SHIELDSURF ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –Ω–∞–¥—ë–∂–Ω—ã–π VPN-—Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–±–æ–¥–Ω–æ–º—É –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.  

üîπ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π  
–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å. –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏ –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è.  

üîπ –°–∫–æ—Ä–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å  
–í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –¥–∞–∂–µ –≤ —Å–ª–æ–∂–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.  

üîπ –û–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫  
–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–µ—Ä–≤–∏—Å–∞–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤ –†–§, –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ –ø–µ—Ä–µ–±–æ–µ–≤.  

üîπ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫  
–°–∫–∞—á–∏–≤–∞–π—Ç–µ —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ, –≤–∫–ª—é—á–∞—è —Ç–æ—Ä—Ä–µ–Ω—Ç—ã. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.  

üîπ –ü–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏  
–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª WireGuard, –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ—á–∞–π—à–∏–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏. –í –±—É–¥—É—â–µ–º –º—ã –¥–æ–±–∞–≤–∏–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥—Ä—É–≥–∏—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤.  

üîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤  
SHIELDSURF —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Windows, macOS, iOS, Android –∏ –¥–∞–∂–µ –Ω–∞ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞—Ö —Å Android TV.  

üîπ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7  
–ù–∞—à–∞ –¥–æ–±—Ä–∞—è –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å, –Ω–æ –≤—ã –±—É–¥–µ—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º —Ä–µ–¥–∫–æ, –≤–µ–¥—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑—É–ø—Ä–µ—á–Ω–æ.  

üîπ –õ—É—á—à–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞  
–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ SHIELDSURF+ ‚Äî –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö –≤—ã–≥–æ–¥–Ω—ã—Ö –Ω–∞ —Ä—ã–Ω–∫–µ! –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –Ω–∞ –∏—Ö –ø–æ–¥–ø–∏—Å–∫–∞—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏.  

VPN SHIELDSURF ‚Äî —ç—Ç–æ —Å–≤–æ–±–æ–¥–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –ª—É—á—à–∏–º!`})
            break
    }
})


bot.on('callback_query', async msg => {
    const data = msg.data
    const chatId = msg.message.chat.id

    switch(data){
        //! –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Ç–æ –≤–µ—Ä–Ω—É—Ç—å
        // case "admin_active_users":
        //     break
        case "admin_ref_payments":
            await refPayments(bot, chatId)
            break
        case "admin_users_income":
            await adminIncome(bot, chatId)
            break
        case "admin_subscriptions":
            break
        case "admin_block":
            await blockUser(bot, chatId)
            break
        case "one_month_sub":
            await createPayment(bot, chatId, data)
            break
        case "three_months_sub":
            await createPayment(bot, chatId, data)
            break
        case "one_year_sub":
            await createPayment(bot, chatId, data)
            break
        case "ref_payment":
            await prisma.users.update({
                where: {chatId},
                data: {
                    paidCard: true
                }
            })
            break
    }
})